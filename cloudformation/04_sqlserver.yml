AWSTemplateFormatVersion: '2010-09-09'
Description: RDS SQL Server Express (safe defaults)

Parameters:
  Prefix:
    Type: String
    Default: gp
  Environment:
    Type: String
    Default: dev

  DBInstanceClass:
    Type: String
    Default: db.t3.medium        # widely supported for Express; change if you need bigger
    Description: RDS instance class

  DBAllocatedStorage:
    Type: Number
    Default: 100
    MinValue: 20
    Description: Allocated storage (GiB)

  # Use LATEST to let AWS choose; set to a specific version to pin (e.g., 16.00.xxxx.x.v1)
  EngineVersion:
    Type: String
    Default: LATEST
    Description: LATEST or a specific engine version string for sqlserver-ex

  SecretExportName:
    Type: String
    Default: secrets-stack-SqlServerSecretArn
    Description: Export name that contains the Secrets Manager ARN

Conditions:
  UseLatestEngineVersion: !Equals [!Ref EngineVersion, LATEST]

Resources:
  SqlServerInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub "${Prefix}-sqlserver-${Environment}"
      Engine: sqlserver-ex
      LicenseModel: license-included
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      StorageType: gp3
      # Only set EngineVersion if not using LATEST
      EngineVersion: !If [UseLatestEngineVersion, !Ref "AWS::NoValue", !Ref EngineVersion]

      MasterUsername:
        Fn::Sub:
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:username}}"
          - { SecretArn: { "Fn::ImportValue": { "Ref": "SecretExportName" } } }
      MasterUserPassword:
        Fn::Sub:
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:password}}"
          - { SecretArn: { "Fn::ImportValue": { "Ref": "SecretExportName" } } }

      DBSubnetGroupName: !ImportValue network-stack-PublicDBSubnetGroup
      VPCSecurityGroups:
        - !ImportValue network-stack-SQLServerSG
      PubliclyAccessible: true
      BackupRetentionPeriod: 7
      MultiAZ: false
      DeletionProtection: false
      CopyTagsToSnapshot: true

Outputs:
  SqlServerEndpoint:
    Description: SQL Server endpoint
    Value: !GetAtt SqlServerInstance.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-SqlServerEndpoint"
